name: "Release binaries and the Docker image"
on:
  release:
    types: [published]

jobs:
  checks:
    name: Checks
    uses: ./.github/workflows/checks.yml
  docker:
    needs:
      - checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to GitHub's container registry
        uses: docker/login-action@v3
        with:
          registry: https://ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ghcr.io/khenziii/asmda:${{ github.ref_name }}
  binaries:
    needs:
      - checks
    runs-on: ubuntu-latest
    strategy:
      matrix:
        targets:
          - x86_64-unknown-linux-gnu
          - x86_64-pc-windows-gnu
          - i686-unknown-linux-gnu
          - i686-pc-windows-gnu
          - aarch64-unknown-linux-gnu
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install cross
        run: cargo install cross

      - name: Add targets
        run: rustup target add ${{ matrix.targets }}

      - name: Build for ${{ matrix.targets }}
        run: cross build --release --target ${{ matrix.targets }}

      - name: Install required dependencies
        if: contains(matrix.targets, 'linux') || contains(matrix.targets, 'darwin')
        run: |
          sudo apt-get update
          sudo apt-get install -y openssl

      - name: Upload binary to release (Linux & MacOS)
        if: contains(matrix.targets, 'linux') || contains(matrix.targets, 'darwin')
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./target/${{ matrix.targets }}/release/asmda
          asset_name: asmda-${{ github.ref_name }}-${{ matrix.targets }}
          asset_content_type: application/octet-stream

      - name: Upload binary to release (Windows)
        if: contains(matrix.targets, 'windows')
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./target/${{ matrix.targets }}/release/asmda.exe
          asset_name: asmda-${{ github.ref_name }}-${{ matrix.targets }}.exe
          asset_content_type: application/octet-stream
